"""add_notes_to_appointments

Revision ID: 393e7bc9f15d
Revises: fd1b96bc7d53
Create Date: 2025-01-25 19:18:31.972022

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '393e7bc9f15d'
down_revision: Union[str, None] = 'fd1b96bc7d53'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('appointments', sa.Column('notes', sa.Text(), nullable=True))
    op.alter_column('appointments', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('appointments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('appointments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('appointments_patient_id_fkey', 'appointments', type_='foreignkey')
    op.create_foreign_key(None, 'appointments', 'patients', ['patient_id'], ['id'])
    op.add_column('leads', sa.Column('notes', sa.Text(), nullable=True))
    op.add_column('leads', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('leads', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('patients', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('patients', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('patients', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('patients', 'updated_at')
    op.alter_column('leads', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('leads', 'updated_at')
    op.drop_column('leads', 'notes')
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.create_foreign_key('appointments_patient_id_fkey', 'appointments', 'patients', ['patient_id'], ['id'], ondelete='CASCADE')
    op.alter_column('appointments', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('appointments', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('appointments', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('appointments', 'notes')
    # ### end Alembic commands ###
